{
	"info": {
		"_postman_id": "d3701a7e-b74f-4eb9-948d-eb256800cdda",
		"name": "REST API basics: CRUD, test & variable",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34076214"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjE0YzllMDViYzNjNTU4MmQ5ZGVjMmQnfSIsInVzZXJuYW1lIjoiam9zdWUiLCJleHAiOjE3MTMyMDQwMDR9.oXvWFArrBplhvLh6QVpxI_RFcQ0IgJRfzDC974qJ4ms",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "33ebafa2-7076-47df-baa0-788fa8b8d539"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ADMIN\",\n    \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"login"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "24051365-b782-4ab0-9ea6-074b60d25d7e"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"riv20@gmail.com\",\n    \"name\": \"Juan\",\n    \"surname\": \"Rivas\",\n    \"carnet\": \"24856\",\n    \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"register"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjFmZDRmNTY1ODZkM2U0OWNiNjVhYTcnfSIsImVtYWlsIjoiNEBnbWFpbC5jb20iLCJyb2xlIjoiVVNFUiIsImV4cCI6MTcxMzYzODUyNH0.fA2yxpba4iPQK-T1kHSkRuhJR4Rfc2RLX7Os1eCY2hU",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/users/getAll",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"getAll"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjI4MDYyODU2YmYyNDJhNmQ4ODg5NTQnfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQxMzcyOTh9.6sGOB5UNlOGsOqdU8bDHLkTZTULCTtgu5N02c2Czg_Q",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/users/getProfile/6628062856bf242a6d888954",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"getProfile",
								"6628062856bf242a6d888954"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Update data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjFmZDRmNTY1ODZkM2U0OWNiNjVhYTcnfSIsImVtYWlsIjoiNEBnbWFpbC5jb20iLCJyb2xlIjoiVVNFUiIsImV4cCI6MTcxMzYzODUyNH0.fA2yxpba4iPQK-T1kHSkRuhJR4Rfc2RLX7Os1eCY2hU",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"4@gmail.com\",\n    \"name\": \"josue\",\n    \"surname\":\"hernandez\",\n    \"carnet\":\"20770\",\n    \"role\":\"ADMIN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/users/update/661fd4f56586d3e49cb65aa7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"update",
								"661fd4f56586d3e49cb65aa7"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "update password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"123\",\n    \"newPassword\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/users/updatePassword/66230a765826cfc3897632f9",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"updatePassword",
								"66230a765826cfc3897632f9"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjFmZDQyNDlhOTlhM2ZjNTRmZjBjOTgnfSIsImVtYWlsIjoiNEBnbWFpbC5jb20iLCJyb2xlIjoiVVNFUiIsImV4cCI6MTcxMzYwNzYzNn0.kUj0w8uLCQZXmuOKjmHwm57YA3H1ZW4qtqZ8T1N8Wa4",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/users/delete/661fd4249a99a3fc54ff0c98",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"delete",
								"661fd4249a99a3fc54ff0c98"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Ingresos",
			"item": [
				{
					"name": "add ingreso",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ4MzY1MTJ9.d_i1pP9ccABLQ-K_C8YLWB8-JHW_JuC4mm7MSr9GoX0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"descripcion\": \"Pruebaaa\" , \n    \"monto\": 150,\n    \"date\": \"2023-07-08\" ,\n    \"idUser\": \"663084366343ea955f8e4152\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/ingresos/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"ingresos",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "list ingresos user",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMzZDA3YmE0NzQyNjkwOGQzMGZmNjInfSIsImVtYWlsIjoicml2MjBAZ21haWwuY29tIiwicm9sZSI6IlVTRVIiLCJleHAiOjE3MTQ3MzY1OTR9.ZhwCmVcrcaJBpiylNc96vSUnyLl7HsC91GiV4ht5nWE",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"descripcion\": \"Pruebaaa\" , \n    \"monto\": 150,\n    \"date\": \"2024-05-02\" ,\n    \"idUser\": \"6633d07ba47426908d30ff62\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/ingresos/listIdUser/6633d07ba47426908d30ff62",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"ingresos",
								"listIdUser",
								"6633d07ba47426908d30ff62"
							]
						}
					},
					"response": []
				},
				{
					"name": "listar por semestre",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ4MzY1MTJ9.d_i1pP9ccABLQ-K_C8YLWB8-JHW_JuC4mm7MSr9GoX0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"year\": 2024, \n    \"semestre\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/ingresos/listSemestre/663084366343ea955f8e4152",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"ingresos",
								"listSemestre",
								"663084366343ea955f8e4152"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "egresos",
			"item": [
				{
					"name": "Debito",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ4MzY1MTJ9.d_i1pP9ccABLQ-K_C8YLWB8-JHW_JuC4mm7MSr9GoX0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"descripcion\": \"Prueba\",\n    \"monto\": 10,\n    \"date\": \"2021-09-02\",\n    \"idUser\": \"663084366343ea955f8e4152\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/egresos/egreso",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"egresos",
								"egreso"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar por user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ4MzY1MTJ9.d_i1pP9ccABLQ-K_C8YLWB8-JHW_JuC4mm7MSr9GoX0",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/egresos/searchByUser/663084366343ea955f8e4152",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"egresos",
								"searchByUser",
								"663084366343ea955f8e4152"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar por semestre",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMzZDA3YmE0NzQyNjkwOGQzMGZmNjInfSIsImVtYWlsIjoicml2MjBAZ21haWwuY29tIiwicm9sZSI6IkFETUlOIiwiZXhwIjoxNzE0Nzc0Njc5fQ.aeWJ68COalc7zapb77b6GPXT25yQzcMRucF_8MCQ8tQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"year\": 2024,\n  \"semestre\":1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/egresos/egresosBySemester/663084366343ea955f8e4152",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"egresos",
								"egresosBySemester",
								"663084366343ea955f8e4152"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar todos los egresos",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMzZDA3YmE0NzQyNjkwOGQzMGZmNjInfSIsImVtYWlsIjoicml2MjBAZ21haWwuY29tIiwicm9sZSI6IlVTRVIiLCJleHAiOjE3MTQ3MzY1OTR9.ZhwCmVcrcaJBpiylNc96vSUnyLl7HsC91GiV4ht5nWE",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/egresos/allEgresos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"egresos",
								"allEgresos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "metas",
			"item": [
				{
					"name": "test",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/metas/test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"metas",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "list By ID USER",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTUwNjQyMTl9.GWA67adAFHroUhNnWP4HYUizqV2qnbjcEIbGt3OIcbc",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/metas/listIdUser/663084366343ea955f8e4152",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"metas",
								"listIdUser",
								"663084366343ea955f8e4152"
							]
						}
					},
					"response": []
				},
				{
					"name": "add",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTUwNjQyMTl9.GWA67adAFHroUhNnWP4HYUizqV2qnbjcEIbGt3OIcbc",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idUser\":\"663084366343ea955f8e4152\",\r\n    \"tipo\":\"HOla\",\r\n    \"monto\":123,\r\n    \"dateObjetivo\":\"2021-09-02\"\r\n}   ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/metas/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"metas",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "list By ID MEtas",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTUwNjQyMTl9.GWA67adAFHroUhNnWP4HYUizqV2qnbjcEIbGt3OIcbc",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/metas/findId/6638d0ec2097dea423a52c23",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"metas",
								"findId",
								"6638d0ec2097dea423a52c23"
							]
						}
					},
					"response": []
				},
				{
					"name": "editar",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTUwNjQyMTl9.GWA67adAFHroUhNnWP4HYUizqV2qnbjcEIbGt3OIcbc",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tipo\":\"adios\",\r\n    \"monto\":3,\r\n    \"dateObjetivo\":\"2021-09-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/metas/edit/6638d0e62097dea423a52c22",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"metas",
								"edit",
								"6638d0e62097dea423a52c22"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "consejos",
			"item": [
				{
					"name": "test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/consejos/test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"consejos",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "list all",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ4NjY3NjN9.IlEmn74NN148wDk9ioxHkEUuGiEVQRJU90xS2t8TVmU",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/consejos/listAll",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"consejos",
								"listAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "list by categoria",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ4NjY3NjN9.IlEmn74NN148wDk9ioxHkEUuGiEVQRJU90xS2t8TVmU",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/consejos/listByCategoria/bus",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"consejos",
								"listByCategoria",
								"bus"
							]
						}
					},
					"response": []
				},
				{
					"name": "list by categoria Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ4NjY3NjN9.IlEmn74NN148wDk9ioxHkEUuGiEVQRJU90xS2t8TVmU",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/consejos/listByUser/663084366343ea955f8e4152",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"consejos",
								"listByUser",
								"663084366343ea955f8e4152"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add consejo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ4NjY3NjN9.IlEmn74NN148wDk9ioxHkEUuGiEVQRJU90xS2t8TVmU",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_usuario\": \"663084c62061bf041eede042\",\r\n    \"categoria\":\"bus\",\r\n\t\"descripcion\": \"ayudar con las personas sordas\",\r\n    \"fecha\": \"2024-04-03\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/consejos/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"consejos",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete consejo",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/consejos/delete/6635ce702673db5dc3f21d82",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"consejos",
								"delete",
								"6635ce702673db5dc3f21d82"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "recompensas",
			"item": [
				{
					"name": "Agregar",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ4MzY1MTJ9.d_i1pP9ccABLQ-K_C8YLWB8-JHW_JuC4mm7MSr9GoX0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"id_usuario\":\"6624858d064926ba73cee545\",\r\n\"descripcion\":\"comida\",\r\n\"puntos\":\"12\",\r\n\"fecha_otorgamiento\":\"2023-05-30\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/recompensas/agregar",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"recompensas",
								"agregar"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListarTodasLasRecompensas",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ4MzY1MTJ9.d_i1pP9ccABLQ-K_C8YLWB8-JHW_JuC4mm7MSr9GoX0",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/recompensas/lis",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"recompensas",
								"lis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar recompensas por usuario",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjI0ODRkMDQzYmUwYTE5MGNkNjBlMTAnfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ2NjM0NDl9.kcO_rl-bKp-BWc5rkfBvWGIG6lgkDbhiyi7KYCe11Jg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://localhost:5000/recompensas/listare/662485c6064926ba73cee546",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"recompensas",
								"listare",
								"662485c6064926ba73cee546"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjMwODRjNjIwNjFiZjA0MWVlZGUwNDInfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ4MzY1MTJ9.d_i1pP9ccABLQ-K_C8YLWB8-JHW_JuC4mm7MSr9GoX0",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"id_usuario\":\"6633fdbf54efe473e1867576\",\r\n\"descripcion\":\"pqpqp\",\r\n\"puntos\":\"100\",\r\n\"fecha_otorgamiento\":\"2024-09-10\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/recompensas/eliminar/66355d4348902b876c20618d",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"recompensas",
								"eliminar",
								"66355d4348902b876c20618d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InsnJG9pZCc6ICc2NjI0ODRkMDQzYmUwYTE5MGNkNjBlMTAnfSIsImVtYWlsIjoiQURNSU4iLCJyb2xlIjoiQURNSU4iLCJleHAiOjE3MTQ2NjM0NDl9.kcO_rl-bKp-BWc5rkfBvWGIG6lgkDbhiyi7KYCe11Jg",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"id_usuario\":\"6633fdbf54efe473e1867576\",\r\n\"descripcion\":\"Actu\",\r\n\"puntos\":\"100\",\r\n\"fecha_otorgamiento\":\"2024-09-10\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/recompensas/update/66342a213b6ef85e52fa7291",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"recompensas",
								"update",
								"66342a213b6ef85e52fa7291"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}